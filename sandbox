#!/bin/bash

usage()
{
  echo "Usage: $0 [OPTIONS]... [COMMAND]"
  echo "    -n NAME     name the sandbox"
  echo "    -d          delete the named sandbox"
  echo "    -l          list all sandboxes"
  echo "    -p          permanent sandbox"
  echo "    -m          in-memory sandbox"
  echo "    -h          show this help text"
  echo "    COMMAND     command to run instead of shell"
  echo ""
  echo "See https://github.com/cal2195/Sandbox for more information!"
}

#Default values
REMOVEAFTER=true
DELETENOW=false
LISTBOXES=false
RAMDISK=false
NEEDSDEPS=false
XSESSION=false
VIEWOVERLAY=false
ROOTDIR="/tmp/sandbox"

#Check for unionfs-fuse
if command -v unionfs >/dev/null 2>&1; then
  UNION="unionfs"
else
  if command -v unionfs-fuse >/dev/null 2>&1; then
    UNION="unionfs-fuse"
  else
    NEEDSDEPS=true
  fi
fi

#Parse commands
while getopts ":n:hdlpmg:xo" opt; do
  case $opt in
    n)
      NAME=$OPTARG
      REMOVEAFTER=false
      ;;
    d)
      DELETENOW=true
      ;;
    p)
      ROOTDIR="$HOME/.sandbox"
      ;;
    m)
      RAMDISK=true
      echo "Warning - using ram disk. Make sure you know what you're doing!"
      ;;
    l)
      LISTBOXES=true
      ;;
    g)
      if [ "$OPTARG" == "list" ]; then
        echo "Getting list of sand grains..."
        curl -sL "https://github.com/cal2195/Sandbox/raw/master/sandgrains/grains.txt"
        exit
      fi
      GRAINS=$OPTARG
      ;;
    o)
      VIEWOVERLAY=true
      ;;
    x)
      XSESSION=true
      ;;
    \?)
      echo "Invalid flag: -$OPTARG" >&2
      usage
      exit
      ;;
    h)
      usage
      exit
      ;;
  esac
done
shift $(($OPTIND - 1))

#Delete if required
if [ "$DELETENOW" == true ]; then
  sudo rm -r $ROOTDIR/$NAME/rw
  echo "Sandbox deleted!"
  exit
fi

#List sandboxes
if [ "$LISTBOXES" == true ]; then
  echo "Sandboxes:"
  ls $ROOTDIR
  exit
fi

#Mount and Use Ram Disk
if [ "$RAMDISK" == true ]; then
  mkdir -p /tmp/ram/sandbox
  sudo mount -t tmpfs tmpfs /tmp/ram/sandbox
  ROOTDIR="/tmp/ram/sandbox"
fi

#Check if they want to view files
if [ "$VIEWOVERLAY" == true ]; then
  xdg-open $ROOTDIR/$NAME/rw
  exit
fi

#Install dependencies & sandbox
if [ "$1" == "install" ]; then
  echo "Installing..."
  if [ "$NEEDSDEPS" == true ]; then
    sudo apt-get update
    sudo apt-get install unionfs-fuse
  fi
  sudo cp $0 /usr/local/bin/$0
  echo "Installed!"
else
  #Determine sandbox type
  if [ "$NAME" == "" ]; then
    if [ "$RAMDISK" == true ]; then
      tmprw="$ROOTDIR/$(cat /dev/urandom | tr -cd 'a-z0-9' | head -c 8)/rw"
      tmprt="$ROOTDIR/$(cat /dev/urandom | tr -cd 'a-z0-9' | head -c 8)/rt"
      NAME="rambox"
    else
      tmprw="/tmp/$(cat /dev/urandom | tr -cd 'a-z0-9' | head -c 8)/rw"
      tmprt="/tmp/$(cat /dev/urandom | tr -cd 'a-z0-9' | head -c 8)/rt"
      NAME="tmpbox"
    fi
    mkdir -p $tmprw
    mkdir -p $tmprt
  else
    mkdir -p $ROOTDIR/$NAME/rw
    mkdir -p $ROOTDIR/$NAME/rt
    tmprw="$ROOTDIR/$NAME/rw"
    tmprt="$ROOTDIR/$NAME/rt"
  fi
  #Mount unionfs
  sudo $UNION -o allow_other,default_permissions,cow,max_files=32000,use_ino,suid,dev,nonempty $tmprw=rw:/=ro $tmprt
  #Mount system folders
  sudo mount -t proc proc $tmprt/proc
  sudo mount -t sysfs sys $tmprt/sys
  sudo mount --rbind /dev $tmprt/dev
  sudo mount --rbind /run $tmprt/run
  #Change PS1 prompt & set DISPLAY
  PSSAND="\"(sandbox) \[\033[38;5;118m\]\u\[$(tput sgr0)\]\[\033[38;5;124m\]@$NAME\[$(tput sgr0)\]\[\033[38;5;15m\]:\[$(tput sgr0)\]\[\033[38;5;6m\][\w]\[$(tput sgr0)\]\[\033[38;5;6m\]>\[$(tput sgr0)\]\[\033[38;5;15m\] \[$(tput sgr0)\]\""
  sudo grep -q -F "DISPLAY=${DISPLAY}" $tmprt/etc/environment || echo "DISPLAY=${DISPLAY}" | sudo tee --append $tmprt/etc/environment > /dev/null
  sudo grep -q -F "PS1=$PSSAND" $tmprt/etc/environment || echo "PS1=$PSSAND" | sudo tee --append $tmprt/etc/environment > /dev/null
  sudo grep -q -F "DISPLAY=${DISPLAY}" $tmprt/$HOME/.bashrc || echo "DISPLAY=${DISPLAY}" | sudo tee --append $tmprt/$HOME/.bashrc > /dev/null
  sudo grep -q -F "PS1=$PSSAND" $tmprt/$HOME/.bashrc || echo "PS1=$PSSAND" | sudo tee --append $tmprt/$HOME/.bashrc > /dev/null
  #Initialise with any sand grains
  if [ "$GRAINS" != "" ]; then
    if [[ $(( $(date +%s) - $(stat -c %Z $tmprt/var/cache/apt/pkgcache.bin) )) -gt $(( 24 * 60 * 60 )) ]]; then
      sudo chroot $tmprt apt-get update
    fi
    sudo chroot $tmprt apt-get install curl
    for grain in $(echo $GRAINS | sed "s/,/ /g")
    do
      #Install each grain
      sudo chroot $tmprt curl -sL "https://github.com/cal2195/Sandbox/raw/master/sandgrains/$grain.grain" | sudo chroot $tmprt /bin/bash
    done

  fi
  #Check if xsession
  if [ "$XSESSION" == true ]; then
    sudo chroot $tmprt rm -r /tmp/.X11-unix
    sudo chroot $tmprt su - $USER -c "sudo rm .Xauthority*"
    sudo chroot $tmprt su - $USER -c "startx -- :2"
  else
    #And we're away! :D
    if [ "$#" -eq  "0" ]; then
      sudo chroot $tmprt su - $USER
    else
      sudo chroot $tmprt su - $USER -c "$@"
    fi
  fi
  #Clean up after exit
  if [ "$REMOVEAFTER" == true ]; then
    sudo rm -r $tmprw
    echo "Sandbox deleted!"
  else
    echo "Sandbox not deleted - reattach using the name: $NAME"
  fi
fi
